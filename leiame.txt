MALE Webcrawler SSL:

Grupo:
André Felipe da Silva - CComp
Lucio Bastos - CComp

Repositorio GIT: https://github.com/andresilvaprogramador/trabalho_redes_-_webcrawler.git
Branch: ssl
Implementação:
	Foi refeita a implementação recursiva para usar a classe http, deixando o codigo mais legível e removendo codigo a mais;
	A implementação de Threads funciona, mas exigiria pensar numa forma de como usaria uma lista de dados unicas enquando as threads acessam
	e preenchem essa lista, por falta de tempo foi preferivel simplificar, apesar de usar a classe threads, usa apenas 1 thread.
	Sobre o erro que foi apontado no outro trabalho, não foi possivel reproduzi-lo, foram feitos exaustivos testes mas não se constatou onde estaria o problema na pthreads, mesmo com flags de debug e warning ativadas.
	A classe ssl é independente e requer apenas o socket da conexao, facilitando a separacao de o que é a implementacao do html da
	implementacao segura.
	Foi removido o suporte ao download de arquivos, foi notado que existem uma infinidade de casos para url, ficou
	muito complicado tratar cada URL e decidir qual o nome de arquivo, em muitos casos nem nome de arquivo existia, 
	portanto para simplificar o projeto e acelerar o processo foi decidido desabilitar esse recurso;
	A recursão foi otimizada para adicionar a lista de visitados apenas endereços que foram acessados com sucesso, links mal formados
	ou com hostname invalido (que nao foi possivel tratar ou não existe) não serão listados;
	Conexões seguras são feitas quando a url contem "https", do contrario é feita uma conexão normal.

Instruções:
	O script executeme possui instrucoes de uso:
		./testeme <url> <profundidade> --CAfile=<caminho/para/arquivo/certificado>
		./testeme <url> <profundidade> --CApath=<caminho/para/pasta/certificados>
		
		NOTA: CAfile e CApath nao podem ser usados simultaneamente, apenas testes com CApath foram realizados
		caso o certificado seja inválido ou o caminho esteja incorreto o programa exibe a mensagem a cada conexão
		quando o certificado é auto-assinado aparece um texto indicativo, em caixa alta na lista de endereços ao lado 
		do Dono;
		NOTA: tanto o script executeme, quando o executavel funcionam de maneira semelhante, a diferença que o script 
		mostra ajuda.
		
	Alem de outros argumentos para facilitar a compilacao e instalacao de bibliotecas necessarias
      -h : chama ajuda
      -c : compila binario
      -i : instala bibliotecas necessarias para compilacao (boost_regex, libssl-dev)
      
Testes:
	Foram feitos testes nos seguintes sites:
	
	https://sites.google.com/a/inf.ufpel.edu.br/pilla/home/redes-de-computadores
	https://www.google.com/
	https://www.openssl.org/
	https://webmail.ufpel.edu.br/
	https://github.com/andresilvaprogramador/trabalho_redes_-_webcrawler/tree/ssl
	
	e respectivos sites em conexão normal não-segura, quando aplicavel;
	
	Após resolver vários problemas particulares, de cada página obteve-se uma experiência satisfatória, foi possivel
	da mesma forma que no trabalho anterior obter os links, e listar as páginas acessadas, com o adendo de conexões
	seguras retornarem com o nome do Dono (CN) e da organização (O) ou quando necessario (OU);
	a pagina da ufpel, retornou um certificado auto-assinado e não confiavel, possivel assim verificar a legimidade.
	Ao não informar um certificado local, porém, não foi possivel verificar a validade de nenhum site.


Exemplo de Linha de Comando testada:
./testeme https://github.com/andresilvaprogramador/trabalho_redes_-_webcrawler/tree/ssl 0 --CApath=/usr/lib/ssl/certs

saida:

Lista URL visitadas:
https://github.com/andresilvaprogramador/trabalho_redes_-_webcrawler/tree/ssl
		CN: [ github.com ]
		O/OU: [ GitHub, Inc. ]

NOTA: aumentando a profundida alem de 0, ele vai entrando nos links encontrados, 0 é a parada da recursão.
